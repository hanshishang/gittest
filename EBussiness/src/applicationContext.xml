<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    
   	<!-- 注解探测器 -->
	 <!-- 对spring org.lxh包下所有注解扫描 -->
	 <!-- 启用注解 -->
	<context:annotation-config/>
	<!-- 添加一个类路径配置，让Spring 容器知道需要扫描该类路径下所有可以加载到容器中的类 -->
	<!-- 扫描子目录下面所有的类  如果哪个类有@Controller配置  我们就把这个类加入到内存中 -->
	<context:component-scan base-package="com.ebs.action"/>
	<context:component-scan base-package="com.ebs.service"/>	
	
    <!-- 配置DataSource数据源 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>classpath:jdbc.properties</value>
        </property>
    </bean>
      
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="initialSize" value="${db.initialSize}" />
        <property name="maxActive" value="${db.maxActive}" />
        <property name="validationQuery" value="${db.validationQuery}" />
        <!--<property name="defaultAutoCommit" value="${db.defaultAutoCommit}"></property>-->
	</bean>
          
  	<!-- 创建SqlSessionFactory，同时指定数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
        <!--<property name="configLocation" value="classpath:mybatis.xml"></property>-->
         <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
         
    </bean>
    
    <!-- 配置事务的传播特性 -->
    <bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
        <property name="transactionManager" ref="transactionManager" />
        <property name="transactionAttributes">
            <props>
                <prop key="add*">PROPAGATION_REQUIRED</prop>
                <prop key="edit*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="del*">PROPAGATION_REQUIRED</prop>
                <prop key="cancel*">PROPAGATION_REQUIRED</prop>
                <prop key="*">readOnly</prop>
            </props>
        </property>
    </bean>
     
 	<!-- 查 找 类 路 径 下 的 映 射 器 并 自 动 将 它 们 创 建 成 MapperFactoryBean-->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.ebs.mapper" />  
    </bean>  
 

    <!-- 对mybatis 接口进行依赖注入  注入到service中调用 service已经 在xml中实例，所以在action不能new 对象，否则mapper为null -->
    <!-- 以xml配置依赖关系，不用注解的办法 -->
    <!-- <bean id="usermapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.ebs.mapper.UserBeanMapper"/> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/> 
	</bean>
	<bean id="us" class="com.ebs.service.UserService">
		<property name="usermapper" ref="usermapper"></property>
	</bean>
    <bean id="cc" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.ebs.mapper.AbcMapper"/> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/> 
	</bean>
	 -->
 </beans>

